#!/usr/bin/env bash

# Add other archetectures support
# Add latest release ex.void, not hardcoded date
# Precoded options, such [Debian] in debain phase

# default settings
arc="amd64"
INSTPATH="/mnt/hbs"


# Colors
NC='\033[0m'
Red='\033[0;31m'
BRed='\033[1;31m'
BGreen='\033[1;32m'
BYellow='\033[1;33m'
BBlue='\033[1;34m'
URed='\033[4;31m'
UBlue='\033[4;34m'


while [ "$1" != "" ]; do
    case $1 in
        -v ) echo "release $VER"; exit;;

        -g | --gui  ) GUI=1;;
        -k | --kde  ) GUI=2;;
        -a | --arc  ) arc=$2; shift;;
        -p | --path ) INSTPATH=$2;shift;;
        -u | --user ) noroot=1;;

        --version ) echo "Linux Bootst$(tput bold)raper$(tput sgr0) by Russanandres, forked from hand7s";exit;;
    esac;shift
done


checks() {
    if ! [ $(id -u) = 0 ] && [ -z $noroot ]; then
        echo -e "${BBlue}Run me as a root.${NC}"
        exit 1
    fi
    INSTPATH=$(readlink -f $INSTPATH)
    tempfile=`(tempfile) 2>/dev/null` || tempfile=/tmp/test$$
    trap "rm -f $tempfile" 0 $SIG_NONE $SIG_HUP $SIG_INT $SIG_QUIT $SIG_TERM;}

dirmake() { mkdir -p $INSTPATH; cd $INSTPATH
            mount /dev/disk/by-label/root $INSTPATH
            mkdir -p $INSTPATH/boot
            mount /dev/disk/by/label/boot $INSTPATH/boot;}




Dwarning(){ trap "clear;exit" SIGINT
left=3
unit="seconds"
while test $left != 0;do
dialog --sleep 1 --title "RBS Warning!" "$@" --infobox "
Hello, this is warning message

You started program with root rights, what have access across the system.
We are NOT responsible for any damage caused to your system.
All responsibility lies solely with you!

You have $left $unit to read this..." 12 70
left=`expr $left - 1`
test "$left" = 1 && unit="second"
done;clear;}
Ddist_type(){ trap "clear;exit" SIGINT
dialog --clear --item-help --title "Choose something" --colors "$@" \
        --menu "Hi, this is a \Zumenu\Zn of all systems what we have.\n\n\
Please choose something one of that or cancel \n\
Install path is: \Zb$INSTPATH\Zn\n\
Choose it now!\n\n\
          Choose the OS you like:" 24 61 4 \
        "Arch"       "Linux, that you love to customize"            "Why not \Zbubuntu?" \
        "Debian"     "Golden standart of linux (my honest opinion)" "Or \ZbNetBSD?" \
        "Gentoo"     "System, that you compile yourself"            "Just say \"I Love waste time!\"" \
        "Slackware"  "Something old, but still updating"            "Perfect to learn linux story" \
        "Void"       "Just void linux)"                             "IDK what is that" \
        "."          ""                                             "Dummy for better UI and UX" \
        "Check"      "Dir files in chroots directory"               "dir C:\\mnt\\hbs" \
        "Remove"     "Just delete ALL chroots of $INSTPATH"         "Really ALL. We'll run rm -rf $INSTPATH/*" 2> $tempfile

retval=$?;DIST=$(cat $tempfile)
if [ $retval == 1 ]; then clear;exit; fi;}

Ddist_family() { trap "clear;exit" SIGINT
case $DIST in
Debian)
        dialog --clear --title "Select debian" "$@" \
        --menu "You can install 2 types of Debian!\n\n\
Ubuntu or real Debian?\n\
          Choose the OS you like:" 20 51 4 \
        "Debian"  "real Debian" \
        "Ubuntu"  "Modified debian for newbiers"  2> $tempfile
        DIST=$(cat $tempfile);;
Check ) { ls $INSTPATH/;sleep 5; } 2>&1 | dialog --progressbox "So, there are all of your chroots!" 30 100; Ddist_type;;
.)Ddist_type;;
Remove )
        dialog  --title "Remove all?" --clear "$@" \
        --yesno "Did you really want to delete ALL of chroots?\n\n\
It removes ALL files in directory $INSTPATH/*\n\
So, all files in there will be gone!\n\n\
                  Continue? " 10 50
    if [ $? == 0 ]; then { rm -rfv $INSTPATH/*;sleep 3; } 2>&1 | dialog --progressbox "So, we are deleted all of your chroots!" 30 100; Ddist_type;fi
;;
esac

left=3
unit="seconds"
while test $left != 0
do
dialog --sleep 1 \
	--title "HBS Warning" "$@" \
        --infobox "
You have been choosen $DIST!\n\n\n\n\n\n\n
Continue in $left $unit..." 10 40
left=`expr $left - 1`
test "$left" = 1 && unit="second"
done;clear;}



Dbs_pacman() { trap "killall wget; rm archlinux-bootstrap-x86_64.tar.zst*;clear;exit" SIGINT
{ wget https://mirror.rackspace.com/archlinux/iso/latest/archlinux-bootstrap-x86_64.tar.zst && untar; } 2>&1 | dialog --progressbox "Now acquire arch tarball." 30 100; }


Dbs_ubuntu(){ trap "killall wget; ubuntu-24.04-server-cloudimg-arm64-root.tar.xz*;clear;exit" SIGINT
{ wget https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-arm64-root.tar.xz && untar; } 2>&1 | dialog --progressbox "Now acquire ubuntu minimal tarball." 30 100; }


Dbs_gentoo() {
dialog --clear --title "Void menu" "$@" --menu "You can install 2 types of gentoo3!\n\n\
Gentoo stage3 has 2 init managers:\n\n\
          Choose the init you like:" 20 51 4 \
        "Openrc"   "More light init, than systemd" \
        "Systemd"  "Overweight init lol"  2> $tempfile
GEN_INIT=$(cat $tempfile)

    if [ "$GEN_INIT" == "Openrc" ]; then
        trap "killall wget; rm stage3-$arc-openrc-20240428T163427Z.tar.xz*;clear;exit" SIGINT
        { wget https://distfiles.gentoo.org/releases/$arc/autobuilds/20240428T163427Z/stage3-$arc-openrc-20240428T163427Z.tar.xz && untar; } 2>&1 | dialog --progressbox "Now acquire gentoo openrc stage3 tarball." 30 100

    elif [ "$GEN_INIT" == "Systemd" ]; then
        trap "killall wget; rm stage3-$arc-systemd-20240428T163427Z.tar.xz*;clear;exit" SIGINT
        { wget https://distfiles.gentoo.org/releases/$arc/autobuilds/20240428T163427Z/stage3-$arc-systemd-20240428T163427Z.tar.xz && untar; } 2>&1 | dialog --progressbox "Now acquire gentoo systemd stage3 tarball." 30 100
    fi
}


Dbs_slackware() { trap "killall wget; rm slackware64-current-mini-20160515.tar.xz*;clear;exit" SIGINT
{ wget https://ponce.cc/slackware/lxc/slackware64-current-mini-20160515.tar.xz && untar; } 2>&1 | dialog --progressbox "Now acquire slackware tarball." 30 100; }


Dbs_void() {
dialog --clear --title "Void menu" "$@" --menu "You can install 2 types of void!\n\n\
Base void or void on musl?\n\n\
          Choose the OS you like:" 20 51 4 \
        "Base"  "One type of void linux" \
        "Musl"  "Second type of void, based on musl"  2> $tempfile
VOID_TYPE=$(cat $tempfile)
    if [ "$VOID_TYPE" == "Base" ]; then
        trap "killall wget; rm void-x86_64-ROOTFS-20240314.tar.xz*;clear;exit" SIGINT
        { wget https://repo-default.voidlinux.org/live/current/void-x86_64-ROOTFS-20240314.tar.xz && untar; } 2>&1 | dialog --progressbox "Now acquire void base tarball." 30 100

    elif [ "$VOID_TYPE" == "Musl" ]; then
        trap "killall wget; rm void-x86_64-musl-ROOTFS-20240314.tar.xz*;clear;exit" SIGINT
        { wget https://repo-default.voidlinux.org/live/current/void-x86_64-musl-ROOTFS-20240314.tar.xz && untar; } 2>&1 | dialog --progressbox "Now acquire void musl tarball." 30 100
    fi
}

Dbs_deb_str() { {
    mkdir -p /usr/share/debootstrap/scripts/
    curl https://raw.githubusercontent.com/aburch/debootstrap/master/scripts/sid > /usr/share/debootstrap/scripts/sid
    curl https://raw.githubusercontent.com/aburch/debootstrap/master/functions > /usr/share/debootstrap/functions
    bash <(curl -fsLS https://raw.githubusercontent.com/aburch/debootstrap/master/debootstrap) --arch=$arc --no-check-certificate --no-check-gpg sid /mnt/hsb http://deb.debian.org/debian/
    rm -rf /usr/share/debootstrap; } 2>&1 | dialog --progressbox "Well, here it is debian install:" 30 100
}

hbs_type() { echo -e "" #clear
    case $DIST in
        Arch)       Dbs_pacman;;
        Debian)     echo -e "\033[1;34mGood luck. Now you on your own. =)\033[0;37m";Dbs_deb_str;;
        Ubuntu)     Dbs_ubuntu;;
        Gentoo)     Dbs_gentoo;;
        Slackware)  Dbs_slackware;;
        Void)       Dbs_void;;
## TBS
        arch)       Tbs_pacman;;
        debian)     Tbs_deb;;
        gentoo)     Tbs_gentoo;;
        slackware)  Tbs_slackware;;
        void)       Tbs_void;;
## KBS
        1)          Kbs_pacman;;
        2)          Kbs_debian;;
        3)          Kbs_ubuntu;;
        4)          Kbs_gentoo;;
        5)          Kbs_slackware;;
        6)          Kbs_void;;
        *)clear;echo "[INFO] You pressed exit or there's exist bug!";exit;;
    esac
}





untar() {
    echo -e "\n\nUncompressing tarball..."
    tar xpf *tar* --numeric-owner
    rm *tar*
}




##### Above - Graphical Bootstrap Scripts (GBS)
##### Under - Terminal Bootstrap Scrips (HBS)





input_error() { echo -e "${BRed}Provide a valid option!${NC}";exit 1;}

Twarning() {
echo -e "\n\n${Red}Hello, this is warning message!

${BRed}You started program with root rights, what have access across the system.
We are NOT responsible for any damage caused to your system.
All responsibility lies solely with you!${NC}

\e[4mIt's okay if there is will be some error messages from the script, except of mount errors!
But still, if you think, what something not okay, IMMEDIATELY create issue on github!!\n\n\e[0m"
}



Tdist_type() { echo -en "Family (${BGreen}arch${NC}/${BGreen}debian${NC}/${BGreen}gentoo${NC}/${BGreen}slackware${NC}/${BGreen}void${NC}) (${BGreen}check${NC}/${BGreen}clear${NC}) [${BBlue}debian${NC}]: "; read DIST;}

Tdist_family() {
    case $DIST in
    arch)       echo -e "${BYellow}Choosen Arch.${NC}";;
    debian)     echo -en "Which type? (${BGreen}debian${NC}/${BGreen}ubuntu${NC}) [${BBlue}debian${NC}]: ";read DEB;echo -e "${BGreen}Choosen $DEB.${NC}";;
    gentoo)     echo -e "${BYellow}Choosen gentoo.${NC}";;
    slackware)  echo -e "${BYellow}Choosen slackware.${NC}";;
    void)       echo -e "${BYellow}hoosen Void.${NC}";;
    check)      trap "Tdist_type" SIGINT;ls $INSTPATH/*; read -sn1 ch;Tdist_type;;
    clear)      rm -rf $INSTPATH/*; echo "Done!";sleep 3;Tdist_type;;
    *)          echo -e "${BRed}Provide one of the described option!${NC}";Tdist_type;;
    esac
}

Tbs_pacman() {
    echo -e "${BYellow}Now acquire arch tarball.${NC}"
    wget https://mirror.rackspace.com/archlinux/iso/latest/archlinux-bootstrap-x86_64.tar.zst
    untar
}

Tbs_deb() {
    if [ "$DEB" == "ubuntu" ]; then echo -e "${BYellow}Now acquire ubuntu minimal tarball.${NC}"
     wget https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-arm64-root.tar.xz;untar
    elif [ "$DEB" == "debian" ]; then echo -e "${BYellow}Good luck. Now you on your own. =)${NC}";Tbs_deb_str
    else echo -e "${BBlue}No.${NC}"; exit 1
    fi
}

Tbs_gentoo() {
    echo -en "Which gentoo stage3 we will use? (openrc/systemd) [openrc]: "; read -p GEN_INIT
    echo -e "${BYellow}Now acquire gentoo $GEN_INIT stage3 tarball.${NC}"
    if [ "$GEN_INIT" == "openrc" ]; then
        wget https://distfiles.gentoo.org/releases/$arc/autobuilds/20240428T163427Z/stage3-$arc-openrc-20240428T163427Z.tar.xz
    elif [ "$GEN_INIT" == "systemd" ]; then
        wget https://distfiles.gentoo.org/releases/$arc/autobuilds/20240428T163427Z/stage3-$arc-systemd-20240428T163427Z.tar.xz
    else input_error
    fi;untar
}

Tbs_slackware() {
    echo -e "${BYellow}Now acquire slack tarball.${NC}"
    wget https://ponce.cc/slackware/lxc/slackware64-current-mini-20160515.tar.xz
    untar
}

Tbs_void() {
    echo -en "Wich type of void we will use? (base/musl) [musl]: "; read -p VOID_TYPE
    echo -e "${BYellow}Now acquire void $VOID_TYPE tarball.${NC}"
    if [ "$VOID_TYPE" == "base" ]; then
        wget https://repo-default.voidlinux.org/live/current/void-x86_64-ROOTFS-20240314.tar.xz
    elif [ "$VOID_TYPE" == "musl" ]; then
        wget https://repo-default.voidlinux.org/live/current/void-x86_64-musl-ROOTFS-20240314.tar.xz
    else input_error
    fi;untar
}

Tbs_deb_str() {
    mkdir -p /usr/share/debootstrap/scripts/
    curl https://raw.githubusercontent.com/aburch/debootstrap/master/scripts/sid > /usr/share/debootstrap/scripts/sid
    curl https://raw.githubusercontent.com/aburch/debootstrap/master/functions > /usr/share/debootstrap/functions
    bash <(curl -fsLS https://raw.githubusercontent.com/aburch/debootstrap/master/debootstrap) --arch=$arc --no-check-certificate --no-check-gpg sid /mnt/hsb http://deb.debian.org/debian/
    rm -rf /usr/share/debootstrap
}





##### Above - Graphical Bootstrap Scripts (GBS)
##### Upper - Terminal Bootstrap Scripts (TBS)
##### Under - KBootstrap Scrips (KBS)


Kwarning(){ trap "clear;exit" SIGINT
kdialog --title "PAY ATTENTION" --sorry "
Hello, this is warning message

You started program with root rights, what have access across the system.
We are NOT responsible for any damage caused to your system.
All responsibility lies solely with you!";}


Kdist_type(){ trap "clear;exit" SIGINT
while true;do
DIST=`kdialog --title "Choose something" --radiolist "Install path is: $INSTPATH" 1 "Arch" off  2 "Debian" on 3 "Ubuntu" off 4 "Gentoo" off 5 "Slackware" off 6 "Void" off 7 "" off 8 "Check" off 9 "Remove" off`
Kdist_family;done;}



Kdist_family() { trap "clear;exit" SIGINT
case $DIST in
7)echo "[INFO] Don't Be Emotional, choose something";;
8) kdialog --title "So, there are all of your chroots!" --textbox /dev/stdin <<< $(ls $INSTPATH/);;
# 8) { ls $INSTPATH/;sleep 5; } 2>&1 | dialog --progressbox "So, there are all of your chroots!" 30 100; Ddist_type;;
9)
        dialog  --title "Remove all?" --clear "$@" \
        --yesno "Did you really want to delete ALL of chroots?\n\n\
It removes ALL files in directory $INSTPATH/*\n\
So, all files in there will be gone!\n\n\
                  Continue? " 10 50
    if [ $? == 0 ]; then { rm -rfv $INSTPATH/*;sleep 3; } 2>&1 | dialog --progressbox "So, we are deleted all of your chroots!" 30 100; Ddist_type;fi
;;
*) hbs_type;;
esac

kdialog --msgbox "You have been choosen $DIST!";}






checks
dirmake
if [ $GUI == 1 ]; then
Dwarning
Ddist_type
Ddist_family
elif [ $GUI == 2 ]; then
Kwarning
Kdist_type
Kdist_family
else
Twarning
Tdist_type
Tdist_family
fi
hbs_type

# Hello, Hand7s!
